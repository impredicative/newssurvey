In this step of the workflow, you are given a chunk of deduplicated draft section names. It is one of many chunks of draft section names that you will independently be given. For your information, in the context of the user's query, a research report is to later be generated in a subsequent step. The research report will contain named sections. As such, the goal is to cluster the provided larger list of draft section names to a more manageable smaller list of finalized section names for the research report. In the context of the user's query, your task is to map each input draft section name to a suggested final section name. You are to group conceptually similar draft section names into the same final section name. I am not asking you to simply shorten or pointlessly reword each draft section name, but to aggregate them. In a later step, you will write the research report with each of the suggested final section names, and you will be given notes to help you do so. In suggesting the final section names, ensure that they maintain a strong relevance and high specificity to the user's query. Also ensure that the language and terminology used are consistent, as this will enhance the clarity and professionalism of the research report.

With each draft section, you are also given the number of references that are available for writing the section. In the scheme of things, you must use this number to aggregate sections such that no final section becomes disproportionately large or small. For example, if given two sections, if the first section were to end up with 1000 references and the second section with 1 reference, that could be utterly lopsided and therefore very undesirable for both sections. There can exist a natural imbalance in the reference count of each final section, but up to a point. On one hand, sections with an unusually small number of available references, meaning disproportionately small sections, should be rolled up into appropriate medium-sized sections. On the other hand, small or medium-sized sections should not coalesce into disproportionately large sections with an unusually large number of available references.

You will be given one randomly ordered draft section name per line in the numbered format "{{line_num}}. {{draft}} (refs={{ref_count}})", where:
* {{line_num}} is the line number. It is just an ordered incremented enumeration of the draft section names.
* {{draft}} is the draft section name.
* {{ref_count}} is the number of references available for writing the section.

Each line of your output will have the numbered format "{{line_num}}. {{draft}} → {{final}}", thereby mapping the correspondingly numbered draft section name "{{draft}}" to your suggested final section name "{{final}}". As such, the line numbering will remain unchanged in your output. As for the reference count, leave out "(refs={{ref_count}})" from your output; it will be recounted automatically.

In the rare event that you are completely unsure of what the final section name should be for a line, you may represent it as the magic value "(abstain)". The full response line will thereby be "{{num}}. {{draft}} → (abstain)". This means you are abstaining from providing a normal final section name for the line. This abstention should however be quite rare if ever, as it will subsequently require randomized retries, which means you will have to process them later anyway.

In each line of your response, never alter the draft section name itself as represented by {{draft}}; it is to be copied verbatim. It is used downstream as a part of the ID key for joining the final section name. After joining, the draft section name will be discarded anyway. The draft section name should not be altered even to correct any spelling errors, or the join will fail, and the entire response will be spurned! As instructed previously, modifications must be represented only via the final section names.

Typically, an `m:n` mapping of the number of draft-to-final section names is expected where `m ≫ n`. As such, reuse of some of the final section names is typically expected in a way that makes sense. In the worst case however, if all draft sections are conceptually too dissimilar for them to be grouped, an `m == n` mapping is possible. By extension, if a draft section name is already suitable as a final section name, it is fine to explicitly map it to itself.

In summary, you must return every final section name, either as a valid new name or as a preexisting name or as (abstain). Do not ever output an invalid final section name such as "Not Applicable" or anything of the sort, otherwise the entire response will be rejected. Remember to leave the reference count out of your output.

The list of draft sections is below:

{draft_sections}