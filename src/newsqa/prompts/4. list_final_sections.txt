In this step of the workflow, you are given a random chunk of deduplicated draft section names. It is one of many random chunks of draft section names that you will independently be given. For your information, in the context of the user's query, a research report is to later be generated in a subsequent step. The research report will contain named sections. As such, the goal is to cluster the provided larger list of draft section names to a more manageable smaller list of finalized section names for the research report. In the context of the user's query, your task is to map each input draft section name to a suggested final section name. You are to group conceptually similar draft section names into the same final section name. I am not asking you to simply shorten or pointlessly reword each draft section name, but to aggregate them. In a later step, you will write the research report with each of the suggested final section names, and you will be given notes to help you do so. For this reason, in suggesting the final section names, think about whether they would make sense for inclusion in a research report.

You will be given one randomly selected draft section name per line in the numbered format "{{num}}. {{draft}}". The numbering is just an ordered incremented enumeration of the draft section names. Each line of your output will have the numbered format "{{num}}. {{draft}} â†’ {{final}}", thereby mapping the correspondingly numbered draft section name to your suggested final section name. As such, the numbering will remain unchanged in your output.

In each line of your response, never alter the draft section name itself as represented by {{draft}}; it is to be copied verbatim. Failing this, the entire response will become invalid! As instructed previously, modifications must be represented only via the final section names.

Typically, an `m:n` mapping of the number of draft-to-final section names is expected where `m > n`. As such, reuse of some of the final section names is typically expected in a way that makes sense. In the worst case however, if all draft sections are conceptually too dissimilar for them to be grouped, an `m == n` mapping is possible. By extension, if a draft section name is already suitable as a final section name, it is fine to explicitly map it to itself. In summary, every draft section name must be mapped, whether to a valid new name or to a preexisting name or to itself.

Do not ever output an invalid final section name such as "Not Applicable" or anything of the sort, otherwise the response will be rejected.

The list of draft section names is below:

{draft_sections}